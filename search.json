[{"title":"LINUX笔记","url":"/2021/09/16/LINUX%E7%AC%94%E8%AE%B0/","content":""},{"title":"python笔记","url":"/2021/09/16/python%E7%AC%94%E8%AE%B0/","content":"python笔记printprint(*objects, sep=&#x27; &#x27;, end=&#x27;\\n&#x27;, file=sys.stdout, flush=False)\n\n\n\ntip: end 默认值 ‘\\n’，即默认换行。\nimport 与 from…import在 python 用 import 或者 from…import 来导入相应的模块。\n将整个模块(somemodule)导入，格式为：\nimport somemodule\n\n从某个模块中导入某个函数,格式为： \nfrom somemodule import somefunction\n\n从某个模块中导入多个函数,格式为： \nfrom somemodule import firstfunc, secondfunc, thirdfunc\n\n将某个模块中的全部函数导入，格式为：\nfrom somemodule import *\n\n标准数据类型\n不可变数据（3 个）：Number（数字）、String（字符串）、Tuple（元组）；\n可变数据（3 个）：List（列表）、Dictionary（字典）、Set（集合）。tip：内置的 **type() **函数可以用来查询变量所指的对象类型。\n\n字符串切片str[开始索引:结束索引:步长]\n\ntip1：切片为左闭右开，开始索引默认值0，结束索引默认值字符串长度-1，步长默认值1；Python中的字符串有两种索引方式，从左往右以0开始，从右往左以-1开始\ntip2：加号 + 是字符串的连接符， 星号 ***** 表示复制当前字符串，与之结合的数字为复制的次数。\ntip3：反斜杠可以用来转义，使用r可以让反斜杠不发生转义。\ntip4：字符串不能改变。向一个索引位置赋值，比如word[0] = ‘m’会导致错误。\n算数运算符\n\n\n运算符\n解释\n\n\n\n+ - *\n略\n\n\n/\n除以（带小数）\n\n\n//\n整除（不带小数，向下取整，即结果的整数部分）\n\n\n**\n幂\n\n\n%\n取模\n\n\n赋值运算符\n\n\n运算符\n描述\n实例\n\n\n\n=\n简单的赋值运算符\nc = a + b 将 a + b 的运算结果赋值为 c\n\n\n+=\n加法赋值运算符\nc += a 等效于 c = c + a\n\n\n-=\n减法赋值运算符\nc -= a 等效于 c = c - a\n\n\n*=\n乘法赋值运算符\nc *= a 等效于 c = c * a\n\n\n/=\n除法赋值运算符\nc /= a 等效于 c = c / a\n\n\n%=\n取模赋值运算符\nc %= a 等效于 c = c % a\n\n\n**=\n幂赋值运算符\nc **= a 等效于 c = c ** a\n\n\n//=\n取整除赋值运算符\nc //= a 等效于 c = c // a\n\n\n:=\n海象运算符，可在表达式内部为变量赋值。Python3.8 版本新增运算符。\n在这个示例中，赋值表达式可以避免调用 len() 两次:if (n := len(a)) &gt; 10:    print(f&quot;List is too long (&#123;n&#125; elements, expected &lt;= 10)&quot;)\n\n\nPython位运算符按位运算符是把数字看作二进制来进行计算的。\n以a=60（0011 1100），b=12（0000 1101）为例\n\n\n\n运算符\n描述\n实例\n\n\n\n&amp;\n按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0\n(a &amp; b) 输出结果 12 ，二进制解释： 0000 1100\n\n\n|\n按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。\n(a | b) 输出结果 61 ，二进制解释： 0011 1101\n\n\n^\n按位异或运算符：当两对应的二进位相异时，结果为1\n(a ^ b) 输出结果 49 ，二进制解释： 0011 0001\n\n\n~\n按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。**~x** 类似于 -x-1\n(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。\n\n\n&lt;&lt;\n左移动运算符：运算数的各二进位全部左移若干位，由”&lt;&lt;”右边的数指定移动的位数，高位丢弃，低位补0。\na &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000\n\n\n&gt;&gt;\n右移动运算符：把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，”&gt;&gt;”右边的数指定移动的位数，低位丢弃，高位补0。\na &gt;&gt; 2 输出结果 15 ，二进制解释： 0000 1111\n\n\nPython逻辑运算符\n\n\n运算符\n逻辑表达式\n描述\n实例\n\n\n\nand\nx and y\n布尔”与” - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值。\n(a and b) 返回 20。\n\n\nor\nx or y\n布尔”或” - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。\n(a or b) 返回 10。\n\n\nnot\nnot x\n布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。\nnot(a and b) 返回 False\n\n\n","categories":["笔记"],"tags":["python"]},{"title":"第一章 绪论","url":"/2021/09/16/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BB%AA%E8%AE%BA/","content":"第一章 绪论1.1 数据库系统概述\n数据库技术产生于六十年代，是数据管理的有效技术，是计算机科学的重要分支。\n数据库技术是信息系统的核心和基础，它的出现极大地促进了计算机应用向各个行业的渗透。\n数据库已尽成为每个人生活中不可缺少的部分。\n\n1.1.1数据库的四个基本概念①数据（Data）定义：描述事物的符号记录称为数据。\n※ 数据的含义称为数据的语义，数据与其语义是不可分的。            在关系模型中数据通过型来给出数据的语义，而数据称为值\n※ 数据往往不是独立的，而是相互联系的\n※ 数据的分类：结构化数据，半结构化数据，非结构化数据\n②数据库（Database）数据库，即存放数据的仓库，是持久存储在计算机中、有组织的、可共享的大量数据集合。\n数据库技术本质是一种数据管理技术。\n数据管理具体指使用电子计算机对数据进行分类、组织、存储、检索和维护。\n※ 特点：        1）数据库中的数据按一定的数据模型组织、描述和存储        2）可以被各种用户共享        3）具有较小的冗余度（避免一个数据多个值）        4）较高的数据独立性（应用程序和数据库相互独立）        5）易于扩展        概括地讲，数据库数据具有永久存储、有组织和可共享三个基本特点。\n※ 数据库的基本操作：数据查询、数据插入、数据修改、数据删除（后三者合起来就是数据更新）\n③数据库管理系统（DBMS）数据库管理系统位于用户和操作系统之间的一层数据管理软件。\n数据库管理系统和操作系统一样是计算机的基础软件。也是一个大型复杂的软件系统。\n目的是科学地组织和存储数据、高效地获取和维护数据。\n常见的数据库管理系统有 ORACLE、MySQL、SQLServer、DB2\n※ 数据库管理系统的主要功能1）数据定义  2）数据组织、存储 和管理  3）数据操纵  4）数据库的事务管理和运行管理  5）数据库的建立和维护功能  6）其他功能\n※ 数据定义功能：提供数据定义语言（DDL），定义数据库中的数据对象\n※ 数据组织、存储和管理：分类组织、存储和管理各种数据，确定组织数据的文件结构和获取方式，实现数据之间的联系，提供多种存取方法提高存取效率\n※ 数据操纵功能：提供数据操纵语言（DML），实现对数据库的基本操作（查询、插入、删除和修改）、\n※ 数据库的事物管理和运行管理：数据库在建立、运行和维护时由数据库管理系统统一管理和控制，保证数据的安全性、完整性、多用户对数据的并发使用，发生故障后的系统修复\n※ 数据库的建立和维护功能：数据库初始数据的装载和转换，数据库转储、恢复功能，数据库的重组织，性能监视、分析等\n※ 其它功能：数据库管理系统与网络中其它软件系统的通信，数据库管理系统系统之间的数据转换，异构数据库之间的互访和互操作\n④数据库系统（DBS）数据库系统由数据库、数据库管理系统（及其应用开发工具）、应用程序和数据库管理员（DBA）组成。\n\n1.1.2数据管理技术的产生和发展数据管理技术的发展过程：①人工管理阶段（20世纪50年代中之间）\n②文件系统阶段（20世纪50年代末——60年代中）\n③数据库系统阶段（20世纪60年代末——现在）\n\n1.1.3数据库系统的特点1.数据结构化数据结构化是数据库的主要特征之一,也是数据库系统与文件系统的本质区别。\n所谓”整体“结构化是指数据库中的数据不再仅仅对某一个应用，而是面向整个组织或企业；不仅数据内部是结构化的，而是整体是结构化的，数据之间是具有联系的。\n2.数据的共享性高，冗余度低且易扩展数据共享可以大大减少数据冗余，节约存储空间。\n数据共享还能够避免数据之间的不相容性与不一致性。\n由于数据面向整个系统，是有结构的数据，不仅可以被多个应用，而且容易增加新的应用，这就亻吏得数据库系统弹性大，易于扩充，可以适应各种用户的要求。\n3.数据独立性高数据独立性是借助数据库管理数据的一个显著优点，它己成为数据库领域中一个常用术语和重要概念，包括数据的物理独立性和逻辑独立性。\n物理独立性是指用户的应用程序与数据库中数据的物理存储是相互独立的。也就是说，数据在数据库中怎样存储是由数据库管理系统管理的，用户程序不需要了解，应用程序要处理的只是数据的逻辑结构，这样当数据的物理存储改变时应用程序不用改变。\n逻辑独立性是指用户的应用程序与数据库的逻辑结构是相互独立的。也就是说，数据的逻辑结构改变时用户程序也可以不变。\n数据与程序的独立把数据的定义从程序中分离出去，加上存取数据的方法又由数据库管理系统负责提供，从而简化了应用程序的编制，大大减少了应用程序的维护和修改。\n4.数据由数据库管理系统统一管理和控制数据库管理系统提供的数据控制功能：        （1）数据的安全性(Security)保护        保护数据以防止不合法的使用造成的数据的泄密和破坏。        （2）数据的完整性(lntegrity)检查        保证数据的正确性、有效性和相容性。        （3）并发(Concurrency)控制        对多用户的并发操作加以控制和协调，防止相互干扰而得到错误的结果。        （4）数据库恢复(Recovery)        将数据库从错误状态恢复到某一已知的正确状态。\n\n1.2 数据模型\n数据模型是对现实世界数据特征的抽象\n通俗地讲数据模型就是现实世界的模拟\n数据模型应满足三方面要求：①能比较真实地模拟现实世界 ②容易为人所理解 ③便于在计算机上实现\n数据模型是数据库系统的核心和基础，是数据库技术的核心概念。\n数据模型是一种形式机制，用于数据建模，描述数据、数据之间的联系、数据的1吾又、数据上的操作和数据的完整性约束条件\n\n数据模型的分类概念模型：也称信息模型，它是按用户的观点来对数据和信息建模，用于数据库设计。\n逻辑模型：逻辑模型主要包括网状模型、层次模型、关系模型、面向对象数据模型、对象关系数据模型、半结构化数据模型等。按计算机系统的观点对数据建模，用于DBMS实现。\n物理模型：\n","categories":["数据库笔记"],"tags":["数据库"]}]