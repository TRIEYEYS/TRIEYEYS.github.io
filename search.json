[{"title":"LINUX笔记","url":"/2021/09/16/LINUX%E7%AC%94%E8%AE%B0/","content":""},{"title":"python笔记","url":"/2021/09/16/python%E7%AC%94%E8%AE%B0/","content":"python笔记printprint(*objects, sep=&#x27; &#x27;, end=&#x27;\\n&#x27;, file=sys.stdout, flush=False)\n\n\n\ntip: end 默认值 ‘\\n’，即默认换行。\nimport 与 from…import在 python 用 import 或者 from…import 来导入相应的模块。\n将整个模块(somemodule)导入，格式为：\nimport somemodule\n\n从某个模块中导入某个函数,格式为： \nfrom somemodule import somefunction\n\n从某个模块中导入多个函数,格式为： \nfrom somemodule import firstfunc, secondfunc, thirdfunc\n\n将某个模块中的全部函数导入，格式为：\nfrom somemodule import *\n\n标准数据类型\n不可变数据（3 个）：Number（数字）、String（字符串）、Tuple（元组）；\n可变数据（3 个）：List（列表）、Dictionary（字典）、Set（集合）。tip：内置的 **type() **函数可以用来查询变量所指的对象类型。\n\n字符串切片str[开始索引:结束索引:步长]\n\ntip1：切片为左闭右开，开始索引默认值0，结束索引默认值字符串长度-1，步长默认值1；Python中的字符串有两种索引方式，从左往右以0开始，从右往左以-1开始\ntip2：加号 + 是字符串的连接符， 星号 ***** 表示复制当前字符串，与之结合的数字为复制的次数。\ntip3：反斜杠可以用来转义，使用r可以让反斜杠不发生转义。\ntip4：字符串不能改变。向一个索引位置赋值，比如word[0] = ‘m’会导致错误。\n算数运算符\n\n\n运算符\n解释\n\n\n\n+ - *\n略\n\n\n/\n除以（带小数）\n\n\n//\n整除（不带小数，向下取整，即结果的整数部分）\n\n\n**\n幂\n\n\n%\n取模\n\n\n赋值运算符\n\n\n运算符\n描述\n实例\n\n\n\n=\n简单的赋值运算符\nc = a + b 将 a + b 的运算结果赋值为 c\n\n\n+=\n加法赋值运算符\nc += a 等效于 c = c + a\n\n\n-=\n减法赋值运算符\nc -= a 等效于 c = c - a\n\n\n*=\n乘法赋值运算符\nc *= a 等效于 c = c * a\n\n\n/=\n除法赋值运算符\nc /= a 等效于 c = c / a\n\n\n%=\n取模赋值运算符\nc %= a 等效于 c = c % a\n\n\n**=\n幂赋值运算符\nc **= a 等效于 c = c ** a\n\n\n//=\n取整除赋值运算符\nc //= a 等效于 c = c // a\n\n\n:=\n海象运算符，可在表达式内部为变量赋值。Python3.8 版本新增运算符。\n在这个示例中，赋值表达式可以避免调用 len() 两次:if (n := len(a)) &gt; 10:    print(f&quot;List is too long (&#123;n&#125; elements, expected &lt;= 10)&quot;)\n\n\nPython位运算符按位运算符是把数字看作二进制来进行计算的。\n以a=60（0011 1100），b=12（0000 1101）为例\n\n\n\n运算符\n描述\n实例\n\n\n\n&amp;\n按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0\n(a &amp; b) 输出结果 12 ，二进制解释： 0000 1100\n\n\n|\n按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。\n(a | b) 输出结果 61 ，二进制解释： 0011 1101\n\n\n^\n按位异或运算符：当两对应的二进位相异时，结果为1\n(a ^ b) 输出结果 49 ，二进制解释： 0011 0001\n\n\n~\n按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。**~x** 类似于 -x-1\n(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。\n\n\n&lt;&lt;\n左移动运算符：运算数的各二进位全部左移若干位，由”&lt;&lt;”右边的数指定移动的位数，高位丢弃，低位补0。\na &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000\n\n\n&gt;&gt;\n右移动运算符：把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，”&gt;&gt;”右边的数指定移动的位数，低位丢弃，高位补0。\na &gt;&gt; 2 输出结果 15 ，二进制解释： 0000 1111\n\n\nPython逻辑运算符\n\n\n运算符\n逻辑表达式\n描述\n实例\n\n\n\nand\nx and y\n布尔”与” - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值。\n(a and b) 返回 20。\n\n\nor\nx or y\n布尔”或” - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。\n(a or b) 返回 10。\n\n\nnot\nnot x\n布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。\nnot(a and b) 返回 False\n\n\n","categories":["笔记"],"tags":["python"]}]